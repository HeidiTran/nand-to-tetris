// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way (in = load, sel = address[9..11], a = loadRAM5120, b = loadRAM5121, c = loadRAM5122, d = loadRAM5123, e = loadRAM5124, f = loadRAM5125, g = loadRAM5126, h = loadRAM5127);
	RAM512 (in = in, load = loadRAM5120, address = address[0..8], out = ram0);
	RAM512 (in = in, load = loadRAM5121, address = address[0..8], out = ram1);
	RAM512 (in = in, load = loadRAM5122, address = address[0..8], out = ram2);
	RAM512 (in = in, load = loadRAM5123, address = address[0..8], out = ram3);
	RAM512 (in = in, load = loadRAM5124, address = address[0..8], out = ram4);
	RAM512 (in = in, load = loadRAM5125, address = address[0..8], out = ram5);
	RAM512 (in = in, load = loadRAM5126, address = address[0..8], out = ram6);
	RAM512 (in = in, load = loadRAM5127, address = address[0..8], out = ram7);
	Mux8Way16 (a = ram0, b = ram1, c = ram2, d = ram3, e = ram4, f = ram5, g = ram6, h = ram7, sel = address[9..11], out = out);
}