function Snake.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
call Utils.getJumpSize 0
pop static 0
push argument 0
push argument 1
call SnakeChunk.new 2
pop this 0
push argument 0
push static 0
sub
push argument 1
call SnakeChunk.new 2
pop this 1
push this 1
push this 0
call SnakeChunk.setNextChunk 2
pop temp 0
push constant 1
push constant 42
call RandNumGen.new 2
pop this 2
push constant 4
push constant 21
call RandNumGen.new 2
pop this 3
push this 2
push this 3
call Apple.new 2
pop this 4
push pointer 0
return
function Snake.dispose 1
push argument 0
pop pointer 0
push this 1
call SnakeChunk.getNextChunk 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push this 1
call SnakeChunk.dispose 1
pop temp 0
push local 0
pop this 1
push this 1
call SnakeChunk.getNextChunk 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 2
call RandNumGen.dispose 1
pop temp 0
push this 3
call RandNumGen.dispose 1
pop temp 0
push this 4
call Apple.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Snake.grow 9
push argument 0
pop pointer 0
push this 1
call SnakeChunk.getX 1
pop local 1
push this 1
call SnakeChunk.getY 1
pop local 2
push local 1
push local 3
eq
push local 2
push local 4
lt
and
pop local 5
push local 1
push local 3
eq
push local 2
push local 4
gt
and
pop local 6
push local 1
push local 3
gt
push local 2
push local 4
eq
and
pop local 8
push pointer 0
push local 5
push local 6
push local 8
call Snake.makeTailWhenMoving 4
pop local 0
push local 0
push this 1
call SnakeChunk.setNextChunk 2
pop temp 0
push local 0
pop this 1
push constant 0
return
function Snake.moveUp 2
push argument 0
pop pointer 0
push this 0
call SnakeChunk.getX 1
pop local 0
push this 0
call SnakeChunk.getY 1
pop local 1
push local 0
push local 1
push static 0
sub
call Utils.isTouchingWall 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push pointer 0
push local 0
push local 1
push static 0
sub
call Snake.move 3
pop temp 0
push constant 0
return
function Snake.moveDown 2
push argument 0
pop pointer 0
push this 0
call SnakeChunk.getX 1
pop local 0
push this 0
call SnakeChunk.getY 1
pop local 1
push local 0
push local 1
push static 0
add
call Utils.isTouchingWall 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push pointer 0
push local 0
push local 1
push static 0
add
call Snake.move 3
pop temp 0
push constant 0
return
function Snake.moveLeft 2
push argument 0
pop pointer 0
push this 0
call SnakeChunk.getX 1
pop local 0
push this 0
call SnakeChunk.getY 1
pop local 1
push local 0
push static 0
sub
push local 1
call Utils.isTouchingWall 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push pointer 0
push local 0
push static 0
sub
push local 1
call Snake.move 3
pop temp 0
push constant 0
return
function Snake.moveRight 2
push argument 0
pop pointer 0
push this 0
call SnakeChunk.getX 1
pop local 0
push this 0
call SnakeChunk.getY 1
pop local 1
push local 0
push static 0
add
push local 1
call Utils.isTouchingWall 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push pointer 0
push local 0
push static 0
add
push local 1
call Snake.move 3
pop temp 0
push constant 0
return
function Snake.move 4
push argument 0
pop pointer 0
push pointer 0
call Snake.isTouchingApple 1
pop local 2
push local 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
call Apple.dispose 1
pop temp 0
push this 2
push this 3
call Apple.new 2
pop this 4
push pointer 0
call Snake.grow 1
pop temp 0
label IF_FALSE0
push argument 1
push argument 2
call SnakeChunk.new 2
pop local 0
push this 0
push local 0
call SnakeChunk.setNextChunk 2
pop temp 0
push local 0
pop this 0
push this 1
call SnakeChunk.getNextChunk 1
pop local 1
push this 1
call SnakeChunk.erase 1
pop temp 0
push this 1
call SnakeChunk.dispose 1
pop temp 0
push local 1
pop this 1
push constant 0
return
function Snake.makeTailWhenMoving 2
push argument 0
pop pointer 0
push this 1
call SnakeChunk.getX 1
pop local 0
push this 1
call SnakeChunk.getY 1
pop local 1
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
push static 0
add
call SnakeChunk.new 2
return
label IF_FALSE0
push argument 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 1
push static 0
sub
call SnakeChunk.new 2
return
label IF_FALSE1
push argument 3
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push static 0
add
push local 1
call SnakeChunk.new 2
return
label IF_FALSE2
push local 0
push static 0
sub
push local 1
call SnakeChunk.new 2
return
function Snake.isTouchingApple 4
push argument 0
pop pointer 0
push this 4
call Apple.getX 1
pop local 0
push this 4
call Apple.getY 1
pop local 1
push this 0
call SnakeChunk.getX 1
pop local 2
push this 0
call SnakeChunk.getY 1
pop local 3
push local 0
push local 2
eq
push local 1
push local 3
eq
and
return
