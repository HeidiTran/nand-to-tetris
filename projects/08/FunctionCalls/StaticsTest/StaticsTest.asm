   @256
   D=A
   @SP
   M=D
   @$ret.0
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @LCL
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @ARG
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THIS
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THAT
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @5
   D=A
   @SP
   D=M-D
   @ARG
   M=D
   @SP
   D=M
   @LCL
   M=D
   @Sys.init
   0;JMP
($ret.0)
// function Class1.set 0
(Class1.set)
   D=0
// push argument 0
   @0
   D=A
   @ARG
   A=M+D
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// pop static 0
   @SP
   AM=M-1
   D=M
   @Class1.0
   M=D
// push argument 1
   @1
   D=A
   @ARG
   A=M+D
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// pop static 1
   @SP
   AM=M-1
   D=M
   @Class1.1
   M=D
// push constant 0
   @0
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
// return
   @LCL
   D=M
   @R13
   M=D
   @5
   D=A
   @R13
   A=M-D
   D=M
   @R14
   M=D
   @SP
   AM=M-1
   D=M
   @ARG
   A=M
   M=D
   @ARG
   D=M+1
   @SP
   M=D
   @1
   D=A
   @R13
   A=M-D
   D=M
   @THAT
   M=D
   @2
   D=A
   @R13
   A=M-D
   D=M
   @THIS
   M=D
   @3
   D=A
   @R13
   A=M-D
   D=M
   @ARG
   M=D
   @4
   D=A
   @R13
   A=M-D
   D=M
   @LCL
   M=D
   @R14
   A=M
   0;JMP
// function Class1.get 0
(Class1.get)
   D=0
// push static 0
   @Class1.0
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// push static 1
   @Class1.1
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// sub
   @SP
   AM=M-1
   D=M
   A=A-1
   M=M-D
// return
   @LCL
   D=M
   @R13
   M=D
   @5
   D=A
   @R13
   A=M-D
   D=M
   @R14
   M=D
   @SP
   AM=M-1
   D=M
   @ARG
   A=M
   M=D
   @ARG
   D=M+1
   @SP
   M=D
   @1
   D=A
   @R13
   A=M-D
   D=M
   @THAT
   M=D
   @2
   D=A
   @R13
   A=M-D
   D=M
   @THIS
   M=D
   @3
   D=A
   @R13
   A=M-D
   D=M
   @ARG
   M=D
   @4
   D=A
   @R13
   A=M-D
   D=M
   @LCL
   M=D
   @R14
   A=M
   0;JMP
// function Class2.set 0
(Class2.set)
   D=0
// push argument 0
   @0
   D=A
   @ARG
   A=M+D
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// pop static 0
   @SP
   AM=M-1
   D=M
   @Class2.0
   M=D
// push argument 1
   @1
   D=A
   @ARG
   A=M+D
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// pop static 1
   @SP
   AM=M-1
   D=M
   @Class2.1
   M=D
// push constant 0
   @0
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
// return
   @LCL
   D=M
   @R13
   M=D
   @5
   D=A
   @R13
   A=M-D
   D=M
   @R14
   M=D
   @SP
   AM=M-1
   D=M
   @ARG
   A=M
   M=D
   @ARG
   D=M+1
   @SP
   M=D
   @1
   D=A
   @R13
   A=M-D
   D=M
   @THAT
   M=D
   @2
   D=A
   @R13
   A=M-D
   D=M
   @THIS
   M=D
   @3
   D=A
   @R13
   A=M-D
   D=M
   @ARG
   M=D
   @4
   D=A
   @R13
   A=M-D
   D=M
   @LCL
   M=D
   @R14
   A=M
   0;JMP
// function Class2.get 0
(Class2.get)
   D=0
// push static 0
   @Class2.0
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// push static 1
   @Class2.1
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
// sub
   @SP
   AM=M-1
   D=M
   A=A-1
   M=M-D
// return
   @LCL
   D=M
   @R13
   M=D
   @5
   D=A
   @R13
   A=M-D
   D=M
   @R14
   M=D
   @SP
   AM=M-1
   D=M
   @ARG
   A=M
   M=D
   @ARG
   D=M+1
   @SP
   M=D
   @1
   D=A
   @R13
   A=M-D
   D=M
   @THAT
   M=D
   @2
   D=A
   @R13
   A=M-D
   D=M
   @THIS
   M=D
   @3
   D=A
   @R13
   A=M-D
   D=M
   @ARG
   M=D
   @4
   D=A
   @R13
   A=M-D
   D=M
   @LCL
   M=D
   @R14
   A=M
   0;JMP
// function Sys.init 0
(Sys.init)
   D=0
// push constant 6
   @6
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
// push constant 8
   @8
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
// call Class1.set 2
   @Sys$ret.0
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @LCL
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @ARG
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THIS
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THAT
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @7
   D=A
   @SP
   D=M-D
   @ARG
   M=D
   @SP
   D=M
   @LCL
   M=D
   @Class1.set
   0;JMP
(Sys$ret.0)
// pop temp 0
   @0
   D=A
   @5
   D=A+D
   @R13
   M=D
   @SP
   AM=M-1
   D=M
   @R13
   A=M
   M=D
// push constant 23
   @23
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
// push constant 15
   @15
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
// call Class2.set 2
   @Sys$ret.1
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @LCL
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @ARG
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THIS
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THAT
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @7
   D=A
   @SP
   D=M-D
   @ARG
   M=D
   @SP
   D=M
   @LCL
   M=D
   @Class2.set
   0;JMP
(Sys$ret.1)
// pop temp 0
   @0
   D=A
   @5
   D=A+D
   @R13
   M=D
   @SP
   AM=M-1
   D=M
   @R13
   A=M
   M=D
// call Class1.get 0
   @Sys$ret.2
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @LCL
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @ARG
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THIS
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THAT
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @5
   D=A
   @SP
   D=M-D
   @ARG
   M=D
   @SP
   D=M
   @LCL
   M=D
   @Class1.get
   0;JMP
(Sys$ret.2)
// call Class2.get 0
   @Sys$ret.3
   D=A
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @LCL
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @ARG
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THIS
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @THAT
   D=M
   @SP
   A=M
   M=D
   @SP
   M=M+1
   @5
   D=A
   @SP
   D=M-D
   @ARG
   M=D
   @SP
   D=M
   @LCL
   M=D
   @Class2.get
   0;JMP
(Sys$ret.3)
// label WHILE
(WHILE)
// goto WHILE
   @WHILE
   0;JMP
